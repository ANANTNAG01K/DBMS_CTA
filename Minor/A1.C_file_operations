#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <string.h>

void handle_error(const char *message) {
    perror(message);
}

void create_file(const char *filename) {
    if (creat(filename, 0644) == -1) {
        handle_error("Error creating file");
    } else {
        printf("File created successfully: %s\n", filename);
    }
}

void read_file(const char *filename) {
    int fd = open(filename, O_RDONLY);
    if (fd == -1) {
        handle_error("Error opening file");
        return;
    }

    char buffer[1024];
    ssize_t bytes_read = read(fd, buffer, sizeof(buffer) - 1);
    close(fd);  // Close the file descriptor after reading

    if (bytes_read == -1) {
        handle_error("Error reading from file");
    } else {
        buffer[bytes_read] = '\0'; // Null-terminate the buffer
        printf("Read %zd bytes: %s\n", bytes_read, buffer);
    }
}

void write_file(const char *filename) {
    int fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (fd == -1) {
        handle_error("Error opening file");
        return;
    }

    char text[1024];
    printf("Enter text to write to file: ");
    fgets(text, sizeof(text), stdin);
    ssize_t bytes_written = write(fd, text, strlen(text));
    close(fd);  // Close the file descriptor after writing

    if (bytes_written == -1) {
        handle_error("Error writing to file");
    } else {
        printf("Wrote %zd bytes to file: %s\n", bytes_written, filename);
    }
}

void delete_file(const char *filename) {
    if (unlink(filename) == -1) {
        handle_error("Error deleting file");
    } else {
        printf("File deleted successfully: %s\n", filename);
    }
}

int main() {
    int choice;

    while (1) {
        printf("\nEnter your choice:\n");
        printf("1. Create a file\n");
        printf("2. Read from file\n");
        printf("3. Write to file\n");
        printf("4. Delete file\n");
        printf("5. Quit\n");

        scanf("%d", &choice);
        getchar(); // Clear the newline character from input buffer

        char filename[1024] = {0}; // Reset filename buffer

        switch (choice) {
            case 1:
                printf("Enter filename to create: ");
                fgets(filename, sizeof(filename), stdin);
                filename[strcspn(filename, "\n")] = 0; // Remove newline
                create_file(filename);
                break;

            case 2:
                printf("Enter filename to read: ");
                fgets(filename, sizeof(filename), stdin);
                filename[strcspn(filename, "\n")] = 0; // Remove newline
                read_file(filename);
                break;

            case 3:
                printf("Enter filename to write: ");
                fgets(filename, sizeof(filename), stdin);
                filename[strcspn(filename, "\n")] = 0; // Remove newline
                write_file(filename);
                break;

            case 4:
                printf("Enter filename to delete: ");
                fgets(filename, sizeof(filename), stdin);
                filename[strcspn(filename, "\n")] = 0; // Remove newline
                delete_file(filename);
                break;

            case 5:
                printf("Exiting the program.\n");
                return 0;

            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
